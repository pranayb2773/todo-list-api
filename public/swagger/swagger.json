{
    "openapi": "3.0.3",
    "info": {
        "title": "Todo List API - Laravel",
        "description": "This is a sample to-do list Restful API created using  Laravel framework. With this API, you can manage your to-do list like view, create, edit and delete functionalities. I have added some other features like Auth where user can login and logout. I have put some access controls to limit sort of operation user can perform.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://todolist.test/api/v1"
        }
    ],
    "tags": [
        {
            "name": "users",
            "description": "Everything about Users."
        },
        {
            "name": "tags",
            "description": "Everything about Tags."
        },
        {
            "name": "todo-lists",
            "description": "Everything about Users to-do lists."
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Login user and generate token",
                "description": "You need to provide user credentials to login.",
                "operationId": "login",
                "requestBody": {
                    "description": "Generated token details after login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            },
                            "example": {
                                "email": "rena.silver@bigtincan.com",
                                "password": "password"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "access_token": "3|oP7SfXMCSGyc0KT8tcOOBiJAwCtdHUZFymC45MxD",
                                    "token_type": "Bearer"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "email": [
                                            "Invalid login credentials."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "email": [
                                            "The email is required."
                                        ],
                                        "password": [
                                            "The password is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Logout currently login user.",
                "description": "It will delete current api token associated with user and logout the user.",
                "operationId": "logout",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "User logged out successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get list of users",
                "description": "Only admin user can see all user details.",
                "operationId": "index",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "description": "This can only be done by admin user.",
                "operationId": "store",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Create user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "email": [
                                            "The email is required."
                                        ],
                                        "password": [
                                            "The password is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by user id",
                "description": "Logged in user can see his own details or admin user can any user details",
                "operationId": "show",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\User] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "update user",
                "description": "This can be done by admin user or logged in user can update his own details",
                "operationId": "update",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\User] 25."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "email": [
                                            "The email is required."
                                        ],
                                        "password": [
                                            "The password is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "delete user",
                "description": "This can be done by admin user or logged in user can update his own details",
                "operationId": "destroy",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "User deleted successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\User] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "Get list of Tags",
                "description": "Any user can see the all tags details",
                "operationId": "allTags",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tags"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "post": {
                "tags": [
                    "tags"
                ],
                "summary": "Create tag",
                "description": "This can only be done by admin user.",
                "operationId": "storeTag",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Create Tag object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tags"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "name": [
                                            "The name is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "tags": [
                    "tags"
                ],
                "summary": "Get tag by tag id",
                "description": "Logged In user can see any tag details.",
                "operationId": "showTag",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide tag id to fetch tag details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\Tags] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "put": {
                "tags": [
                    "tags"
                ],
                "summary": "update tag",
                "description": "This can only be done by admin user.",
                "operationId": "updateTag",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide tag id to fetch tag details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tags"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\Tags] 25."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "name": [
                                            "The name is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tags"
                ],
                "summary": "delete tag",
                "description": "This can only be done by admin user.",
                "operationId": "destroyTag",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide tag id to fetch tag details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Tag deleted successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\Tags] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/users/{id}/todo-lists": {
            "get": {
                "tags": [
                    "todo-lists"
                ],
                "summary": "Get user to-do lists by user id",
                "description": "Logged in user can see his own to-do lists details or admin user can any user to-do lists details",
                "operationId": "showUserTodoLists",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user to-do lists details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoLists"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\User] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "post": {
                "tags": [
                    "todo-lists"
                ],
                "summary": "Create to-do list",
                "description": "Logged in user can create his to-do list.",
                "operationId": "storeUserTodoList",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create Todo list object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TodoList"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoLists"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "subject": [
                                            "The subject is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        },
        "/users/{id}/todo-lists/{todo_list_id}": {
            "get": {
                "tags": [
                    "todo-lists"
                ],
                "summary": "Get user's one todo-list by user id and to-do list id",
                "description": "Logged in user can see his own to-do list details or admin user can view any user to-do list details",
                "operationId": "showUserTodoList",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "todo_list_id",
                        "in": "path",
                        "description": "Provide to-do list id to fetch to-do list details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoLists"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\TodoList] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "put": {
                "tags": [
                    "todo-lists"
                ],
                "summary": "update user to-do list",
                "description": "This can be done by admin user or logged in user can update his own todo list details",
                "operationId": "updateUserTodoList",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "todo_list_id",
                        "in": "path",
                        "description": "Provide to-do list id to fetch to-do list details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated to-do list object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TodoList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoLists"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\TodoList] 25."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated",
                                    "errors": {
                                        "subject": [
                                            "The subject is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            },
            "delete": {
                "tags": [
                    "todo-lists"
                ],
                "summary": "delete user to-do list",
                "description": "This can be done by admin user or logged in user can delete his own to-do list.",
                "operationId": "destroyUserTodoList",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provide user id to fetch user details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "todo_list_id",
                        "in": "path",
                        "description": "Provide to-do list id to fetch to-do list details.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Todo list deleted successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "This action is authorized."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "example": {
                                    "message": "No query results for model [App\\\\Models\\\\TodoList] 25."
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Errors"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Rena"
                    },
                    "email": {
                        "type": "string",
                        "example": "rena.silver@bigtincan.com"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    }
                }
            },
            "Tags": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "PHP"
                    },
                    "description": {
                        "type": "string",
                        "example": "Categorize the content under PHP"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "PHP"
                    },
                    "description": {
                        "type": "string",
                        "example": "Categorize the content under PHP"
                    }
                }
            },
            "TodoLists": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "subject": {
                        "type": "string",
                        "example": "PHP"
                    },
                    "description": {
                        "type": "string",
                        "example": "Categorize the content under PHP"
                    },
                    "due_date": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    },
                    "status": {
                        "type": "integer",
                        "oneOf": [
                            {
                                "enum": [
                                    "1 - Completed",
                                    "2 - Cancelled",
                                    "3 - Pending"
                                ]
                            }
                        ],
                        "example": 3
                    },
                    "priority": {
                        "type": "integer",
                        "oneOf": [
                            {
                                "enum": [
                                    "1 - High",
                                    "2 - Medium",
                                    "3 - Low"
                                ]
                            }
                        ],
                        "example": 3
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tags"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2022-11-07 11:30:00"
                    }
                }
            },
            "TodoList": {
                "type": "object",
                "properties": {
                    "subject": {
                        "type": "string",
                        "example": "Laravel"
                    },
                    "description": {
                        "type": "string",
                        "example": "Categorize the content under Laravel"
                    },
                    "due_date": {
                        "type": "string",
                        "example": "2022-11-07"
                    },
                    "status": {
                        "type": "integer",
                        "oneOf": [
                            {
                                "enum": [
                                    "1 - Completed",
                                    "2 - Cancelled",
                                    "3 - Pending"
                                ]
                            }
                        ],
                        "example": 3
                    },
                    "priority": {
                        "type": "integer",
                        "oneOf": [
                            {
                                "enum": [
                                    "1 - High",
                                    "2 - Medium",
                                    "3 - Low"
                                ]
                            }
                        ],
                        "example": 3
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tags"
                        },
                        "example": [
                            1,
                            3
                        ]
                    }
                }
            },
            "CreateUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Test"
                    },
                    "email": {
                        "type": "string",
                        "example": "test.silver@bigtincan.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "TestSilver@123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "TestSilver@123"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "UpdateUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Test"
                    },
                    "email": {
                        "type": "string",
                        "example": "test.silver@test.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "TestSilver@123"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": true
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
